--EJERCICIO 1-- 
SELECT * FROM MOVIES;

--EJERCICIO 2-- 
SELECT * FROM GENRES;

--EJERCICIO 3-- 
SELECT * FROM STUDIOS
WHERE STUDIO_ACTIVE = 1;

--EJERCICIO 4-- 
SELECT * FROM MEMBERS
ORDER BY MEMBER_ID DESC LIMIT 20;

--EJERCICIO 5--
SELECT MOVIE_NAME, MOVIE_DURATION FROM MOVIES
ORDER BY MOVIE_DURATION DESC 
LIMIT 20;

--EJERCICIO 6-- 
SELECT * FROM MOVIES
WHERE YEAR (MOVIE_LAUNCH_DATE) >= 2000	
AND  UPPER(MOVIE_NAME) LIKE 'A%';

--EJERCICIO 7--
SELECT * FROM ACTORS
WHERE MONTH (ACTOR_BIRTH_DATE) = 06;

--EJERCICIO 8-- 
SELECT * FROM ACTORS
WHERE MONTH (ACTOR_BIRTH_DATE) !=06
AND ACTOR_DEAD_DATE IS NULL;

--EJERCICIO 9-- 
/*SELECT DIRECTOR_NAME, DIRECTOR_BIRTH_DATE FROM DIRECTORS
WHERE (YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) <= 50
AND DIRECTOR_DEAD_DATE IS NULL;*/
SELECT DIRECTOR_NAME, YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE) AS EDAD
FROM DIRECTORS
WHERE (YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) <= 50
AND DIRECTOR_DEAD_DATE IS NULL;


--EJERCICIO 10-- 
SELECT ACTOR_NAME, (YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE)) AS EDAD 
FROM ACTORS
WHERE (YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE)) < 50
AND ACTOR_DEAD_DATE IS NOT NULL;

--EJERCICIO 11--
SELECT DIRECTOR_NAME 
FROM DIRECTORS
WHERE (YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) <=40
AND DIRECTOR_DEAD_DATE IS NULL;

--EJERCICIO 12--
SELECT AVG(YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) AS EDAD_MEDIA 
FROM DIRECTORS
WHERE DIRECTOR_DEAD_DATE IS NULL;

--EJERCICIO 13--
SELECT AVG(YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE)) AS EDAD_MEDIA
FROM ACTORS
WHERE ACTOR_DEAD_DATE IS NOT NULL;

--EJERCICIO 14--
--SELECT * FROM MOVIES;--
--SELECT * FROM STUDIOS;--
SELECT M.MOVIE_NAME, S.STUDIO_NAME
FROM MOVIES M
JOIN STUDIOS S ON M.STUDIO_ID = S.STUDIO_ID;

--EJERCICIO 15--
--SELECT * FROM MEMBERS;--
--SELECT * FROM MEMBERS_MOVIE_RENTAL;--
SELECT M.MEMBER_NAME
FROM MEMBERS M
JOIN MEMBERS_MOVIE_RENTAL MR ON M.MEMBER_ID = MR.MEMBER_MOVIE_RENTAL_ID
WHERE MR.MEMBER_RENTAL_DATE BETWEEN '2010-01-01' AND '2015-12-31'
GROUP BY M.MEMBER_NAME;

--EJERCICIO 16--
SELECT N.NATIONALITY_NAME, COUNT(M.MOVIE_ID) AS PELICULAS 
FROM MOVIES M
JOIN NATIONALITIES N
ON M.NATIONALITY_ID = N.NATIONALITY_ID
GROUP BY N.NATIONALITY_NAME;

--EJERCICIO 17--
SELECT MOVIE_NAME
FROM MOVIES
WHERE GENRE_ID = 2;

SELECT M.MOVIE_NAME
FROM movies M
JOIN genres G
ON m.GENRE_ID = G.GENRE_ID
WHERE G.GENRE_NAME = 'Documentary';

--ejercicio 18--
SELECT * FROM MOVIES;
SELECT * FROM DIRECTORS;

SELECT M.MOVIE_NAME, D.DIRECTOR_NAME
FROM MOVIES M
JOIN DIRECTORS D
ON M.DIRECTOR_ID = D.DIRECTOR_ID
WHERE D.DIRECTOR_BIRTH_DATE >= '1980-01-01'
AND D.DIRECTOR_DEAD_DATE IS NULL;

--EJERCICIO 19--
--SELECT * FROM MEMBERS;--
--SELECT * FROM DIRECTORS;--
SELECT  m.MEMBER_NAME, d.DIRECTOR_NAME
FROM members m
JOIN DIRECTORS d
ON m.MEMBER_TOWN = d.DIRECTOR_BIRTH_PLACE;
--SIN RESOLVER--

--EJERCICIO 20--
SELECT M.MOVIE_NAME, M.MOVIE_LAUNCH_DATE 
FROM MOVIES M
JOIN STUDIOS D
ON M.STUDIO_ID = D.STUDIO_ID 
WHERE D.STUDIO_ACTIVE = 0;

--EJERCICIO 21--
SELECT m.MOVIE_NAME, r.MEMBER_RENTAL_DATE
FROM members_movie_rental r
JOIN MOVIES m
ON r.MOVIE_ID = m.MOVIE_ID
ORDER BY r.MEMBER_RENTAL_DATE DESC
LIMIT 10;

--EJERCICIO 22--
SELECT d.DIRECTOR_NAME, COUNT(m.MOVIE_ID) AS MOVIE_COUNT
FROM DIRECTORS d
JOIN MOVIES m ON d.DIRECTOR_ID = m.DIRECTOR_ID
WHERE YEAR(m.MOVIE_LAUNCH_DATE) < YEAR(d.DIRECTOR_BIRTH_DATE) + 41
GROUP BY d.DIRECTOR_NAME;

--EJERCICIO 23--
SELECT d.DIRECTOR_NAME, AVG(m.MOVIE_DURATION) AS AVERAGE_DURATION
FROM DIRECTORS d
JOIN MOVIES m ON d.DIRECTOR_ID = m.DIRECTOR_ID
GROUP BY d.DIRECTOR_NAME;

--EJERCOCOP 24--
SELECT m.MOVIE_NAME, MIN(m.MOVIE_DURATION) AS MIN_DURATION
FROM members_movie_rental r
JOIN MOVIES m ON r.MOVIE_ID = m.MOVIE_ID
WHERE r.MEMBER_RENTAL_DATE >= '2017-01-25'
GROUP BY m.MOVIE_NAME
ORDER BY MIN_DURATION ASC
LIMIT 1;

--EJERICICIO 25--
SELECT COUNT(m.MOVIE_ID) AS MOVIE_COUNT
FROM MOVIES m
JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID
WHERE (YEAR(m.MOVIE_LAUNCH_DATE) BETWEEN 1960 AND 1989)
AND m.MOVIE_NAME LIKE '%The%';

--EJERCICIO 26--
SELECT m.MOVIE_NAME AS NOMBRE, n.NATIONALITY_NAME AS NACIONALIDAD, d.DIRECTOR_NAME AS DIRECTOR
FROM MOVIES m
JOIN NATIONALITIES n ON m.NATIONALITY_ID = n.NATIONALITY_ID
JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID;

--EJERCICIO 27--
SELECT * FROM MOVIES_ACTORS;
SELECT * FROM ACTORS;
SELECT * FROM movies; 

SELECT m.MOVIE_NAME, a.ACTOR_NAME
FROM movies m
JOIN movies_actors ma ON m.MOVIE_ID = ma.MOVIE_ID
JOIN actors a ON ma.ACTOR_ID = a.ACTOR_ID;

--EJERCICIO 28--
SELECT d.DIRECTOR_NAME, COUNT(mmr.MOVIE_ID) AS N_ALQUILER
FROM DIRECTORS D
JOIN MOVIES m ON d.DIRECTOR_ID = m.DIRECTOR_ID 
JOIN MEMBERS_MOVIE_RENTAL mmr ON m.MOVIE_ID  = mmr.MOVIE_ID 
GROUP BY d.DIRECTOR_NAME 
ORDER BY N_ALQUILER DESC 
LIMIT 1;

--EJERCICIO 29--






